GIT-PUSH(1)                                     Git Manual                                     GIT-PUSH(1)

NAME
       git-push - Update remote refs along with associated objects

SYNOPSIS
       git push [--all | --mirror | --tags] [--follow-tags] [--atomic] [-n | --dry-run] [--receive-pack=<git-receive-pack>]
                  [--repo=<repository>] [-f | --force] [-d | --delete] [--prune] [-v | --verbose]
                  [-u | --set-upstream] [--push-option=<string>]
                  [--[no-]signed|--signed=(true|false|if-asked)]
                  [--force-with-lease[=<refname>[:<expect>]]]
                  [--no-verify] [<repository> [<refspec>...]]

DESCRIPTION
       Updates remote refs using local refs, while sending objects necessary to complete the given refs.

       You can make interesting things happen to a repository every time you push into it, by setting up
       hooks there. See documentation for git-receive-pack(1).

       When the command line does not specify where to push with the <repository> argument,
       branch.*.remote configuration for the current branch is consulted to determine where to push. If
       the configuration is missing, it defaults to origin.

       When the command line does not specify what to push with <refspec>... arguments or --all, --mirror,
       --tags options, the command finds the default <refspec> by consulting remote.*.push configuration,
       and if it is not found, honors push.default configuration to decide what to push (See git-config(1)
       for the meaning of push.default).

       When neither the command-line nor the configuration specify what to push, the default behavior is
       used, which corresponds to the simple value for push.default: the current branch is pushed to the
       corresponding upstream branch, but as a safety measure, the push is aborted if the upstream branch
       does not have the same name as the local one.

OPTIONS
       <repository>
           The "remote" repository that is destination of a push operation. This parameter can be either a
           URL (see the section GIT URLS below) or the name of a remote (see the section REMOTES below).

       <refspec>...
           Specify what destination ref to update with what source object. The format of a <refspec>
           parameter is an optional plus +, followed by the source object <src>, followed by a colon :,
           followed by the destination ref <dst>.

           The <src> is often the name of the branch you would want to push, but it can be any arbitrary
           "SHA-1 expression", such as master~4 or HEAD (see gitrevisions(7)).

           The <dst> tells which ref on the remote side is updated with this push. Arbitrary expressions
           cannot be used here, an actual ref must be named. If git push [<repository>] without any
           <refspec> argument is set to update some ref at the destination with <src> with
           remote.<repository>.push configuration variable, :<dst> part can be omitted--such a push will
           update a ref that <src> normally updates without any <refspec> on the command line. Otherwise,
           missing :<dst> means to update the same ref as the <src>.

           The object referenced by <src> is used to update the <dst> reference on the remote side. By
           default this is only allowed if <dst> is not a tag (annotated or lightweight), and then only if
           it can fast-forward <dst>. By having the optional leading +, you can tell Git to update the
           <dst> ref even if it is not allowed by default (e.g., it is not a fast-forward.) This does not
           attempt to merge <src> into <dst>. See EXAMPLES below for details.

           tag <tag> means the same as refs/tags/<tag>:refs/tags/<tag>.

:

